{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uday Shreemali\\\\Desktop\\\\frontevent\\\\src\\\\Exusestat.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n\n// function Exusestat() {\n//   return (\n//     <div className='userlist'>\n//     <div className='colorwhite'>\n//       <table className='alluser bg-white text-black'>\n//         <thead>\n//           <tr className='userheader'>\n//             <th>fullName</th>\n\n//             <th>Email</th>\n\n//             <th className=''>password</th>\n\n//           </tr>\n//         </thead>\n//         <tbody>\n//           { [\n//             { fullName: \"Demo\", email: 'mailto:user1@gmail.com', password: '123' },\n//             { fullName: \"Demo1\", email: 'mailto:user1@gmail.com', password: '123' },\n//             { fullName: \"Demo2\", email: 'mailto:user1@gmail.com', password: '123' },\n\n//           ].map((user) => (\n//             <tr key={user.fullName}>\n//               <td>{user.fullName}</td>\n\n//               <td>{user.email}</td>\n\n//               <td className=''>{user.password}</td>\n\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   </div>\n//   )\n// }\n\n// export default Exusestat\nimport React, { useState } from 'react';\nimport './Exusestat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = () => {\n  _s();\n  // Initialize state with some sample user data\n  const [users, setUsers] = useState([{\n    fullname: 'Demo1',\n    email: 'mailto:user1@gmail.com',\n    password: '123'\n  }, {\n    fullname: 'Demo2',\n    email: 'mailto:user2@gmail.com',\n    password: '4546'\n  }, {\n    fullname: 'Demo3',\n    email: 'mailto:user3@gmail.com',\n    password: '789'\n  }]);\n\n  // Function to handle adding a new user (for demonstration)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"usestate\",\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.fullname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTable, \"ooSo1f6V8VWodVoczZbG5cYC+Yo=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserTable","_s","users","setUsers","fullname","email","password","children","fileName","_jsxFileName","lineNumber","columnNumber","className","border","map","user","index","_c","$RefreshReg$"],"sources":["C:/Users/Uday Shreemali/Desktop/frontevent/src/Exusestat.js"],"sourcesContent":["// import React from 'react'\r\n\r\n// function Exusestat() {\r\n//   return (\r\n//     <div className='userlist'>\r\n//     <div className='colorwhite'>\r\n//       <table className='alluser bg-white text-black'>\r\n//         <thead>\r\n//           <tr className='userheader'>\r\n//             <th>fullName</th>\r\n           \r\n//             <th>Email</th>\r\n           \r\n//             <th className=''>password</th>\r\n           \r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           { [\r\n//             { fullName: \"Demo\", email: 'mailto:user1@gmail.com', password: '123' },\r\n//             { fullName: \"Demo1\", email: 'mailto:user1@gmail.com', password: '123' },\r\n//             { fullName: \"Demo2\", email: 'mailto:user1@gmail.com', password: '123' },\r\n            \r\n//           ].map((user) => (\r\n//             <tr key={user.fullName}>\r\n//               <td>{user.fullName}</td>\r\n           \r\n             \r\n//               <td>{user.email}</td>\r\n              \r\n//               <td className=''>{user.password}</td>\r\n          \r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   </div>\r\n//   )\r\n// }\r\n\r\n// export default Exusestat\r\nimport React, { useState } from 'react';\r\nimport './Exusestat.css'\r\n\r\nconst UserTable = () => {\r\n  // Initialize state with some sample user data\r\n  const [users, setUsers] = useState([\r\n    { fullname: 'Demo1', email: 'mailto:user1@gmail.com', password: '123' },\r\n    { fullname: 'Demo2', email: 'mailto:user2@gmail.com', password: '4546' },\r\n    { fullname: 'Demo3', email: 'mailto:user3@gmail.com', password: '789' }\r\n  ]);\r\n\r\n  // Function to handle adding a new user (for demonstration)\r\n  \r\n  return (\r\n    <div>\r\n      <h1>User Table</h1>\r\n     \r\n      <table className='usestate' border=\"1\" >\r\n        <thead>\r\n          <tr>\r\n            <th>Full Name</th>\r\n            <th>Email</th>\r\n            <th>Password</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, index) => (\r\n            <tr key={index}>\r\n              <td>{user.fullname}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.password}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}