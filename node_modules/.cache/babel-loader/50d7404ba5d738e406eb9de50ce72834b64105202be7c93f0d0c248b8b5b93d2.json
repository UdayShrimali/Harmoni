{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uday Shreemali\\\\Desktop\\\\frontevent\\\\src\\\\ContactMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './ContactMessages.css';\nimport Cookies from 'js-cookie'; // If using cookies for storing token\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactMessages = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch data from the API with authorization\n    const token = sessionStorage.getItem(\"userToken\") || Cookies.get(\"userToken\");\n    if (!token) {\n      setError('No token available. Please log in.');\n      return;\n    }\n    axios.get('http://localhost:3046/api/v1/contact/allmessage', {\n      headers: {\n        Authorization: `Bearer ${token}` // Attach token to the request\n      }\n    }).then(response => {\n      console.log('Full API Response:', response); // Log the entire response object\n      if (response.data.success) {\n        setMessages(response.data.data); // Assuming the data is in response.data.data\n      } else {\n        console.error('API Response Error:', response.data.message);\n        setError(response.data.message || 'Unexpected error occurred.');\n      }\n    }).catch(error => {\n      console.error('Error fetching messages:', error);\n      setError('Error fetching messages.');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-messages-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-list\",\n      children: messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: message.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 18\n          }, this), \" \", message.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mobile No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 18\n          }, this), \" \", message.mobile_no]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 18\n          }, this), \" \", message.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)) : !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactMessages, \"M71EGWNu4ns1Sx/Ct8es0oeChNc=\");\n_c = ContactMessages;\nexport default ContactMessages;\nvar _c;\n$RefreshReg$(_c, \"ContactMessages\");","map":{"version":3,"names":["React","useEffect","useState","axios","Cookies","jsxDEV","_jsxDEV","ContactMessages","_s","messages","setMessages","error","setError","token","sessionStorage","getItem","get","headers","Authorization","then","response","console","log","data","success","message","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","fullName","email","mobile_no","_c","$RefreshReg$"],"sources":["C:/Users/Uday Shreemali/Desktop/frontevent/src/ContactMessage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ContactMessages.css';\r\nimport Cookies from 'js-cookie'; // If using cookies for storing token\r\n\r\nconst ContactMessages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API with authorization\r\n    const token = sessionStorage.getItem(\"userToken\") || Cookies.get(\"userToken\");\r\n\r\n    if (!token) {\r\n      setError('No token available. Please log in.');\r\n      return;\r\n    }\r\n\r\n    axios.get('http://localhost:3046/api/v1/contact/allmessage', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // Attach token to the request\r\n      },\r\n    })\r\n    .then(response => {\r\n      console.log('Full API Response:', response); // Log the entire response object\r\n      if (response.data.success) {\r\n        setMessages(response.data.data); // Assuming the data is in response.data.data\r\n      } else {\r\n        console.error('API Response Error:', response.data.message);\r\n        setError(response.data.message || 'Unexpected error occurred.');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching messages:', error);\r\n      setError('Error fetching messages.');\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"contact-messages-container\">\r\n      <h1>Contact Messages</h1>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <div className=\"messages-list\">\r\n        {messages.length > 0 ? (\r\n          messages.map((message, index) => (\r\n            <div key={index} className=\"message-card\">\r\n              <h2>{message.fullName}</h2>\r\n              <p><strong>Email:</strong> {message.email}</p>\r\n              <p><strong>Mobile No:</strong> {message.mobile_no}</p>\r\n              <p><strong>Message:</strong> {message.message}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          !error && <p>No messages available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactMessages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}