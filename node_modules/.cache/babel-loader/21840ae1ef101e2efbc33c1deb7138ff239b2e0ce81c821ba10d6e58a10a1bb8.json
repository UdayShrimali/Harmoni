{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uday Shreemali\\\\Desktop\\\\frontevent\\\\src\\\\Changepass.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChangePassword() {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false); // for button disable state\n  const [errorMessage, setErrorMessage] = useState('');\n  const handlePasswordChange = async e => {\n    e.preventDefault();\n\n    // Validate if newPassword and confirmPassword match\n    if (newPassword !== confirmPassword) {\n      setErrorMessage('New password and confirm password do not match.');\n      return;\n    }\n\n    // Reset error message if passwords match\n    setErrorMessage('');\n\n    // Set loading to true to prevent multiple submissions\n    setLoading(true);\n    try {\n      // Get user token (or any authentication token)\n      const token = sessionStorage.getItem('userToken');\n\n      // Make API call to change the password\n      const response = await axios.post('http://localhost:3046/api/v1/users/passwordChange',\n      // Replace with your actual API endpoint\n      {\n        currentPassword,\n        newPassword\n      }, {\n        headers: {\n          Authorization: `${token}` // Use token for authorization if needed\n        }\n      });\n\n      // Check if the password change was successful\n      if (response.status === 200 && response.data.success) {\n        alert('Password changed successfully');\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n      } else {\n        setErrorMessage('Failed to change password');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Display any error from the API\n      const apiError = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to change password';\n      setErrorMessage(apiError);\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordChange,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Enter current password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Confirm new password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        children: loading ? 'Changing...' : 'Change Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(ChangePassword, \"fypUDr0pxjazJP8rNnPLzPK7BJM=\");\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChangePassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","errorMessage","setErrorMessage","handlePasswordChange","e","preventDefault","token","sessionStorage","getItem","response","post","headers","Authorization","status","data","success","alert","error","_error$response","_error$response$data","apiError","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Uday Shreemali/Desktop/frontevent/src/Changepass.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ChangePassword() {\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false); // for button disable state\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate if newPassword and confirmPassword match\r\n    if (newPassword !== confirmPassword) {\r\n      setErrorMessage('New password and confirm password do not match.');\r\n      return;\r\n    }\r\n\r\n    // Reset error message if passwords match\r\n    setErrorMessage('');\r\n\r\n    // Set loading to true to prevent multiple submissions\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Get user token (or any authentication token)\r\n      const token = sessionStorage.getItem('userToken');\r\n\r\n      // Make API call to change the password\r\n      const response = await axios.post(\r\n        'http://localhost:3046/api/v1/users/passwordChange', // Replace with your actual API endpoint\r\n        {\r\n          currentPassword,\r\n          newPassword,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `${token}`, // Use token for authorization if needed\r\n          },\r\n        }\r\n      );\r\n\r\n      // Check if the password change was successful\r\n      if (response.status === 200 && response.data.success) {\r\n        alert('Password changed successfully');\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n      } else {\r\n        setErrorMessage('Failed to change password');\r\n      }\r\n    } catch (error) {\r\n      // Display any error from the API\r\n      const apiError = error.response?.data?.message || 'Failed to change password';\r\n      setErrorMessage(apiError);\r\n    } finally {\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Change Password</h2>\r\n      <form onSubmit={handlePasswordChange}>\r\n        <div className=\"form-group\">\r\n          <label>Current Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter current password\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter new password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Confirm New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Confirm new password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n          {loading ? 'Changing...' : 'Change Password'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMgB,oBAAoB,GAAG,MAAOC,CAAC,IAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIV,WAAW,KAAKE,eAAe,EAAE;MACnCK,eAAe,CAAC,iDAAiD,CAAC;MAClE;IACF;;IAEA;IACAA,eAAe,CAAC,EAAE,CAAC;;IAEnB;IACAF,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAMM,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;;MAEjD;MACA,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAC/B,mDAAmD;MAAE;MACrD;QACEjB,eAAe;QACfE;MACF,CAAC,EACD;QACEgB,OAAO,EAAE;UACPC,aAAa,EAAE,GAAGN,KAAK,EAAE,CAAE;QAC7B;MACF,CACF,CAAC;;MAED;MACA,IAAIG,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAIJ,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAE;QACpDC,KAAK,CAAC,+BAA+B,CAAC;QACtCtB,kBAAkB,CAAC,EAAE,CAAC;QACtBE,cAAc,CAAC,EAAE,CAAC;QAClBE,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAC,MAAM;QACLI,eAAe,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd;MACA,MAAMC,QAAQ,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,2BAA2B;MAC7EnB,eAAe,CAACkB,QAAQ,CAAC;IAC3B,CAAC,SAAS;MACRpB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKgC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjC,OAAA;MAAAiC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrC,OAAA;MAAMsC,QAAQ,EAAEzB,oBAAqB;MAAAoB,QAAA,gBACnCjC,OAAA;QAAKgC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBjC,OAAA;UAAAiC,QAAA,EAAO;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/BrC,OAAA;UACEuC,IAAI,EAAC,UAAU;UACfP,SAAS,EAAC,cAAc;UACxBQ,WAAW,EAAC,wBAAwB;UACpCC,KAAK,EAAEtC,eAAgB;UACvBuC,QAAQ,EAAG5B,CAAC,IAAKV,kBAAkB,CAACU,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrC,OAAA;QAAKgC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBjC,OAAA;UAAAiC,QAAA,EAAO;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BrC,OAAA;UACEuC,IAAI,EAAC,UAAU;UACfP,SAAS,EAAC,cAAc;UACxBQ,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAEpC,WAAY;UACnBqC,QAAQ,EAAG5B,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UAChDG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrC,OAAA;QAAKgC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBjC,OAAA;UAAAiC,QAAA,EAAO;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnCrC,OAAA;UACEuC,IAAI,EAAC,UAAU;UACfP,SAAS,EAAC,cAAc;UACxBQ,WAAW,EAAC,sBAAsB;UAClCC,KAAK,EAAElC,eAAgB;UACvBmC,QAAQ,EAAG5B,CAAC,IAAKN,kBAAkB,CAACM,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAEL1B,YAAY,iBAAIX,OAAA;QAAKgC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEtB;MAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEzErC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,iBAAiB;QAACa,QAAQ,EAAEpC,OAAQ;QAAAwB,QAAA,EACjExB,OAAO,GAAG,aAAa,GAAG;MAAiB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnC,EAAA,CAxGQD,cAAc;AAAA6C,EAAA,GAAd7C,cAAc;AA0GvB,eAAeA,cAAc;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}